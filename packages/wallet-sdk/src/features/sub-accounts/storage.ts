import { ScopedLocalStorage } from ':core/storage/ScopedLocalStorage.js';

/////////////////////////////////////////////////////////////////////////////////////////////
// Constants
/////////////////////////////////////////////////////////////////////////////////////////////
export const SUB_ACCOUNTS_KEY = 'ACCOUNTS';
export const ACTIVE_ID_KEY = 'ACTIVE_ID';

/////////////////////////////////////////////////////////////////////////////////////////////
// Storage
/////////////////////////////////////////////////////////////////////////////////////////////
export const subAccountStorage = new ScopedLocalStorage('CBWSDK', 'SUB_ACCOUNT');

/////////////////////////////////////////////////////////////////////////////////////////////
// Utility
/////////////////////////////////////////////////////////////////////////////////////////////
export function getSubAccountFromStorage() {
  const activeId = subAccountStorage.getItem(ACTIVE_ID_KEY);
  if (!activeId) {
    return null;
  }
  const accounts = subAccountStorage.loadObject(SUB_ACCOUNTS_KEY) || {};
  return accounts[activeId as keyof typeof accounts] ?? {};
}
